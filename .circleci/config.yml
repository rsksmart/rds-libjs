version: 2.1

jobs:
  check:
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node-v1-{{ .Branch }}-
            - node-v1-
      - run:
          name: "Install deps"
          command: npm install
      - save_cache:
          paths:
            - ./node_modules
          key: node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
      - run:
          name: "Commit linting"
          command: |
            git config --global user.email "you@example.com"
            git config --global user.name "Your Name"
            npx tasegir commitlint --circleci
      - run:
          name: "Dependency check"
          command: npx tasegir dep-check
      - run:
          name: "Code linting"
          command: npx tasegir lint
  node-tests:
    parameters:
      version:
        type: string
    docker:
      - image: circleci/node:<< parameters.version >>
      - image: auhau/swarm_test:0.5.4
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node-v1-{{ .Branch }}-
            - node-v1-
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for Swarm
          command: dockerize -wait tcp://localhost:8500 -timeout 2m

      - run:
          name: "Node tests"
          command: npm run test:node -- --bail
      - run:
          name: "Test coverage"
          command: npx nyc report --reporter=text-lcov > coverage.lcov && npx codecov

  chrome:
    docker:
      - image: circleci/node:12-browsers
      - image: auhau/swarm_test:0.5.4
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node-v1-{{ .Branch }}-
            - node-v1-
      - run:
          name: "Install deps"
          command: npm install
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for Swarm
          command: dockerize -wait tcp://localhost:8500 -timeout 2m
      - run:
          name: "Browser tests"
          # TODO: Waiting for release of Erebos fixing Web-worker integration
          # command: npx tasegir test -t browser -t webworker
          command: npx tasegir test -t browser

    # TODO: Currently not used. Failing most probably because of CORS restrictions, which I did not managed to overcome. Firefox does not allow to disable this check and I have not managed to set Karma to support this.
    # Yet I am not 100% sure if it is really the problem.
  #  firefox:
  #    docker:
  #      - image: circleci/node:12-browsers
  #      - image: auhau/swarm_test:0.5.2
  #    steps:
  #      - checkout
  #      - restore_cache:
  #          keys:
  #            # when lock file changes, use increasingly general patterns to restore cache
  #            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
  #            - node-v1-{{ .Branch }}-
  #            - node-v1-
  #      - run:
  #          name: install dockerize
  #          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
  #          environment:
  #            DOCKERIZE_VERSION: v0.3.0
  #      - run:
  #          name: "Install deps"
  #          command: npm install
  #      - run:
  #          name: Wait for Swarm
  #          command: dockerize -wait tcp://localhost:8500 -timeout 2m
  #      - run:
  #          name: "Browser tests"
  #          # TODO: Waiting for release of Erebos fixing Web-worker integration
  #          #command: npx tasegir test -t browser -t webworker -- --browsers FirefoxHeadless
  #          command: npx tasegir test -t browser -- --browsers FirefoxHeadless

  electron-main:
    docker:
      - image: circleci/node:12-browsers
      - image: auhau/swarm_test:0.5.4
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node-v1-{{ .Branch }}-
            - node-v1-
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: "Install bins"
          command: sudo apt-get install -y libgconf-2-4 libasound2 libxss1 xvfb gcc-multilib g++-multilib icnsutils graphicsmagick xz-utils libudev-dev libnss3 libgtk-3-0
      - run:
          name: "Install deps"
          command: npm install
      - run:
          name: Wait for Swarm
          command: dockerize -wait tcp://localhost:8500 -timeout 2m
      - run:
          name: "Browser tests"
          command: npx tasegir test -t electron-main --bail

  electron-renderer:
    docker:
      - image: circleci/node:12-browsers
      - image: auhau/swarm_test:0.5.4
    steps:
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - node-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - node-v1-{{ .Branch }}-
            - node-v1-
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: "Install bins"
          command: sudo apt-get install -y libgconf-2-4 libasound2 libxss1 xvfb gcc-multilib g++-multilib icnsutils graphicsmagick xz-utils libudev-dev libnss3 libgtk-3-0
      - run:
          name: Wait for Swarm
          command: dockerize -wait tcp://localhost:8500 -timeout 2m
      - run:
          name: "Browser tests"
          command: npx tasegir test -t electron-renderer --bail

workflows:
  version: 2
  test:
    jobs:
      - check
      - node-tests:
          version: '10'
          name: node-10
          requires:
            - check
      - node-tests:
          version: '12'
          name: node-12
          requires:
            - check
      - node-tests:
          version: '13'
          name: node-13
          requires:
            - check
      - chrome:
          requires:
            - check
      #- firefox:
      #    requires:
      #      - check
      - electron-main:
          requires:
            - check
#      - electron-renderer:
#          requires:
#            - check
